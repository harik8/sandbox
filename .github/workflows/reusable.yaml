name: Reusable Workflow

on:
  workflow_call:
    inputs:
      build_args:
        type: string
        description: List of build args for Docker build
        default: ""
        required: false
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
        
jobs:
  INIT:
    runs-on: ubuntu-latest
    outputs:
      modified_apps:  ${{ steps.modified_apps.outputs.modified_apps}}
    steps:

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Modified Apps
      id: modified_apps
      run: |
        modified_apps=$(git diff HEAD HEAD~ --name-only \
          | grep '/' \
          | cut -d'/' -f1 \
          | grep -vE '^(\.github|\.helm-tmpl|cicd-template)$' \
          | sort -u \
          | jq -R . | jq -s .)
        echo $modified_apps

        echo "modified_apps<<EOF" >> $GITHUB_OUTPUT
        echo "$modified_apps" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [INIT]
    if: ${{ needs.INIT.outputs.modified_apps != '[]' }}
    outputs:
      repository: ${{ steps.set_tag.outputs.repository }}
      tag: ${{ steps.set_tag.outputs.tag }}
    strategy:
      matrix:
        apps: ${{ fromJson(needs.INIT.outputs.modified_apps) }}

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Check Docker daemon
      run: docker info

    # Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set Tag
      id: set_tag
      run: |
        repository=${{ secrets.DOCKER_USERNAME }}/${{ matrix.apps }}
        
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          tag=${{ github.head_ref }}-$(echo "${{ github.event.pull_request.head.sha }}" | head -c5)
        else
          tag=${{ github.ref_name }}-$(echo "${{ github.sha }}" | head -c5)
        fi

        echo "repository=$repository" >> $GITHUB_OUTPUT
        echo "tag=$tag" >> $GITHUB_OUTPUT

    # Build and push the Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ${{ matrix.apps }}
        platforms: linux/arm64
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.apps }}:${{ steps.set_tag.outputs.tag }}

    # Verify that the Docker image is built
    - name: Image digest
      run: echo ${{ steps.build.outputs.digest }}

  CD:
    runs-on: self-hosted
    needs: [CI, INIT]
    strategy:
      matrix:
        apps: ${{ fromJson(needs.INIT.outputs.modified_apps) }}
    steps:
    - name: Git clone the repository
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: 'latest'

    - name: Deploy
      if: ${{ matrix.apps != 'gha-runner' }}
      run: |
        sed -i "s/^name: .*/name: ${{ matrix.apps }}/" .helm-tmpl/Chart.yaml
        sed -i "s/^appVersion: .*/appVersion: latest/" .helm-tmpl/Chart.yaml

        helm upgrade --install --atomic \
          --create-namespace \
          --namespace ${{ matrix.apps }} \
          --set image.repository=${{ secrets.DOCKER_USERNAME }}/${{ matrix.apps }} \
          --set image.tag=${{ needs.CI.outputs.tag }} \
          -f .helm-tmpl/values.yaml -f ${{ matrix.apps }}/.helm/values.yaml -f ${{ matrix.apps }}/.helm/local/values.yaml \
          ${{ matrix.apps }} .helm-tmpl
